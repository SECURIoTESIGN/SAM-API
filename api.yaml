swagger: "2.0"
info:
  description: SAM's API Swagger documentation
  version: 0.1
paths:
  # User Login Service
  /user/{email}:
    get:
      tags:
      - "User"
      summary: "Find user by email"
      description: "Returns a single user"
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        description: "Email of the user to return"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid email supplied"
        404:
          description: "User not found"
  # User Login Service
  /user/login:
    post:
      tags:
      - "Authentication"
      summary: "User Authentication Service"
      description: ""
      operationId: "authenticate"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      - "application/json"
      parameters:
      - in: "formData"
        name: "email"
        schema:
            type: string
        description: "Email of the user to be authenticated"
        required: true
      - in: "formData"
        name: "psw"
        schema:
            type: string
        description: "Password of the user to be authenticated"
        required: true
      responses:
        '200':
            description: Returns an authentication token
            examples:
              # Returns a JSON object as the following example:
              application/json: 
                { 
                  "/user/login":{
                    "ID": 1,
                    "avatar": "path/to/avatar/ID",
                    "status": 200,
                    "token": (...) eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9 (...)
                  }
                }
        '400':
            description: The email or password cannot be empty
        '401':
            description: Authentication failure
        '404':
            description: A user with the specified email was not found.
        '5XX':
            description: Unexpected error.
  /user:
    post:
      tags:
      - "Authentication"
      summary: "Add a new user"
      description: ""
      operationId: "authenticate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be added"
        required: true
        example:
            {
              'email': 'new@user.com',
              'psw': 'SuperSecretPlainPassword',
              'avatar': 'path/to/avatar/img'
            }
      responses:
        '200':
            description: The user was created 
            examples:
              # Returns a JSON object as the following example:
              application/json: 
                { 
                  "/user":{
                    "status": 200,
                  }
                }
        '400':
            description: Invalid parsed JSON object
        '5XX':
            description: Unexpected error.